/* eslint-disable react-native/no-inline-styles */
import React from 'react';
import {View, Text, StyleSheet, ScrollView} from 'react-native';
import Option from '../Options';
import Questions from '../Questions.json';
import {connect} from 'react-redux';
import Header from '../../Extras/Header';
import { SafeAreaView } from 'react-native';

class quizScreen extends React.Component{

    constructor(props){
        super(props)
            this.state = {
                username:null,
                timecount:0,
              // index:0,
            };
        }

    componentDidMount(){
      // alert(JSON.stringify(this.store))
    }
    
    render(){
        const { route } = this.props;
        console.log(route)
        console.log("route")
        const {index} = route.params;
        // const {index} = this.state
  return (
    <SafeAreaView style={{flex:1, backgroundColor: "#fff",}}>
      <Header 
     navigation={this.props.navigation}
      />

      
      <View style={{justifyContent: 'space-between', flexDirection: 'row'}}>
        <Text style={styles.questionNo}>
          {index + 1}/{Questions.questions.length}
        </Text>
      </View>
      <Text style={styles.Question}>
          {Questions.questions[index].question}
          </Text>
        <ScrollView showsVerticalScrollIndicator={false} style={{}}>

      {Questions.questions[index].answers.map((option, i) => (
        <Option
          value={option}
          navigation={this.props.navigation}
          optionIdx={i}
          qnIndex={index}
          key={i}
        />

      ))}
        <View style={{height:100}}/>
            </ScrollView>

    </SafeAreaView>
  );
}
}

function mapStateToProps(state){
  return{
    store: state
  }

}

function mapDispatchToProps(dispatch){
  return{
      UpdateItemsInCart:(state)=>dispatch({type:'UpdateItemsInCart', state:state})
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(quizScreen);


const styles = StyleSheet.create({
  questionNo: {
    color: 'red',
    fontSize: 25,
    margin: 20,
  },
  Question: {
    fontSize: 24,
    margin: 25,
    color:'#000'
  },
  nextButton: {
    height: 50,
    width: '20%',
    backgroundColor: '#3700B3',
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: 'flex-end',
    margin: 20,
    borderRadius: 15,
  },
  nextText: {
    color: 'white',
    fontWeight: '900',
  },
});